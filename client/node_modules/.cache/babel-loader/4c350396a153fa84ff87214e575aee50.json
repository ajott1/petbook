{"ast":null,"code":"import _classCallCheck from \"/Users/alexanderott/Desktop/petbook/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alexanderott/Desktop/petbook/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alexanderott/Desktop/petbook/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alexanderott/Desktop/petbook/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alexanderott/Desktop/petbook/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alexanderott/Desktop/petbook/client/src/components/profiles/Profiles.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profileActions';\n\nvar Profiles =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Profiles, _Component);\n\n  function Profiles() {\n    _classCallCheck(this, Profiles);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Profiles).apply(this, arguments));\n  }\n\n  _createClass(Profiles, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getProfiles();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$profile = this.props.profile,\n          profiles = _this$props$profile.profiles,\n          loading = _this$props$profile.loading;\n      var profileItems;\n\n      if (profiles === null || loading) {\n        profileItems = React.createElement(Spinner, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        });\n      } else {\n        if (profiles.length > 0) {\n          profileItems = profiles.map(function (profile) {\n            return React.createElement(ProfileItem, {\n              key: profile._id,\n              profile: profile,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 22\n              },\n              __self: this\n            });\n          });\n        } else {\n          profileItems = React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, \"No profiles found...\");\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"Profiles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"display-4 text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"Pet Profiles\"), React.createElement(\"p\", {\n        className: \"lead text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Browse and connect with pets!\"), profileItems))));\n    }\n  }]);\n\n  return Profiles;\n}(Component);\n\nProfiles.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    profile: state.profile\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getProfiles: getProfiles\n})(Profiles);","map":{"version":3,"sources":["/Users/alexanderott/Desktop/petbook/client/src/components/profiles/Profiles.js"],"names":["React","Component","connect","PropTypes","Spinner","ProfileItem","getProfiles","Profiles","props","profile","profiles","loading","profileItems","length","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,QAA4B,8BAA5B;;IAEMC,Q;;;;;;;;;;;;;wCACkB;AAChB,WAAKC,KAAL,CAAWF,WAAX;AACH;;;6BAEM;AAAA,gCACwB,KAAKE,KAAL,CAAWC,OADnC;AAAA,UACGC,QADH,uBACGA,QADH;AAAA,UACaC,OADb,uBACaA,OADb;AAEL,UAAIC,YAAJ;;AAEA,UAAGF,QAAQ,KAAK,IAAb,IAAqBC,OAAxB,EAAiC;AAC7BC,QAAAA,YAAY,GAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAf;AACH,OAFD,MAEO;AACH,YAAGF,QAAQ,CAACG,MAAT,GAAkB,CAArB,EAAwB;AACtBD,UAAAA,YAAY,GAAGF,QAAQ,CAACI,GAAT,CAAa,UAAAL,OAAO;AAAA,mBAC/B,oBAAC,WAAD;AAAa,cAAA,GAAG,EAAEA,OAAO,CAACM,GAA1B;AAA+B,cAAA,OAAO,EAAEN,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAD+B;AAAA,WAApB,CAAf;AAGD,SAJD,MAIO;AACLG,UAAAA,YAAY,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAf;AACD;AACJ;;AAEH,aACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAFJ,EAKKA,YALL,CADJ,CADJ,CADJ,CADJ;AAeD;;;;EApCoBX,S;;AAuCvBM,QAAQ,CAACS,SAAT,GAAqB;AACjBV,EAAAA,WAAW,EAAEH,SAAS,CAACc,IAAV,CAAeC,UADX;AAEjBT,EAAAA,OAAO,EAAEN,SAAS,CAACgB,MAAV,CAAiBD;AAFT,CAArB;;AAKA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAC9BZ,IAAAA,OAAO,EAAEY,KAAK,CAACZ;AADe,GAAL;AAAA,CAA7B;;AAIA,eAAeP,OAAO,CAACkB,eAAD,EAAkB;AAACd,EAAAA,WAAW,EAAXA;AAAD,CAAlB,CAAP,CAAwCC,QAAxC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Spinner from '../common/Spinner';\nimport ProfileItem from './ProfileItem';\nimport { getProfiles } from '../../actions/profileActions';\n\nclass Profiles extends Component {\n    componentDidMount() {\n        this.props.getProfiles();\n    }\n\n  render() {\n      const { profiles, loading} = this.props.profile;\n      let profileItems;\n\n      if(profiles === null || loading) {\n          profileItems = <Spinner />;\n      } else {\n          if(profiles.length > 0) {\n            profileItems = profiles.map(profile => (\n                <ProfileItem key={profile._id} profile={profile} />\n            ))\n          } else {\n            profileItems = <h4>No profiles found...</h4>;\n          }\n      }\n      \n    return (\n        <div className=\"Profiles\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Pet Profiles</h1>\n                        <p className=\"lead text-center\">\n                            Browse and connect with pets!\n                        </p>\n                        {profileItems}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n  }\n}\n\nProfiles.propTypes = {\n    getProfiles: PropTypes.func.isRequired,\n    profile: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    profile: state.profile\n})\n\nexport default connect(mapStateToProps, {getProfiles})(Profiles);\n"]},"metadata":{},"sourceType":"module"}